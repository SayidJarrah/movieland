<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="getAllMovies" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                       p.path poster, g.id genre_id, g.name genre, c.name country,
                                       c.id country_id
                                FROM   movie m, poster p, movie_has_genre mhg, genre g,
                                       movie_has_country mhc, country c
                                WHERE  m.poster_id=p.id
                                AND    m.id=mhg.movie_id
                                AND    mhg.genre_id=g.id
                                AND    m.id=mhc.movie_id
                                AND    mhc.country_id=c.id"/>
    </bean>

    <bean id="getRandomMovies" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                       p.path poster, g.id genre_id, g.name genre, c.name country,
                                       c.id country_id
                                FROM   movie m, poster p, movie_has_genre mhg, genre g,
                                       movie_has_country mhc, country c
                                WHERE  m.poster_id=p.id
                                AND    m.id=mhg.movie_id
                                AND    mhg.genre_id=g.id
                                AND    m.id=mhc.movie_id
                                AND    mhc.country_id=c.id
                                ORDER BY RAND()
                                LIMIT 3;"/>
    </bean>

    <bean id="getMoviesByGenre" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                       p.path poster, g.id genre_id, g.name genre, c.name country,
                                       c.id country_id
                                FROM   movie m, poster p, movie_has_genre mhg, genre g,
                                       movie_has_country mhc, country c
                                WHERE  m.poster_id=p.id
                                AND    m.id=mhg.movie_id
                                AND    mhg.genre_id=g.id
                                AND    m.id=mhc.movie_id
                                AND    mhc.country_id=c.id
                                AND    g.id = ?"/>
    </bean>

    <bean id="getAllGenres" class="java.lang.String">
        <constructor-arg value="SELECT id, name FROM genre;"/>
    </bean>

    <bean id="getMovieById" class="java.lang.String">
        <constructor-arg value="  SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                         p.path poster, g.id genre_id, g.name genre, c.name country,
                                         c.id country_id, r.id review_id, r.text, u.id user_id,
                                         u.first_name, u.last_name
                                  FROM   movie m, poster p, movie_has_genre mhg, genre g,
                                         movie_has_country mhc, country c, review r, user u
                                  WHERE  m.poster_id=p.id
                                  AND    m.id=mhg.movie_id
                                  AND    mhg.genre_id=g.id
                                  AND    m.id=mhc.movie_id
                                  AND    mhc.country_id=c.id
                                  AND    m.id=r.movie_id
                                  AND    r.user_id=u.id
                                  AND    m.id = ?"/>
    </bean>

</beans>