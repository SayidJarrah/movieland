<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="getAllMovies" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                       p.path poster, g.id genre_id, g.name genre, c.name country,
                                       c.id country_id
                                FROM   movie m, poster p, movie_has_genre mhg, genre g,
                                       movie_has_country mhc, country c
                                WHERE  m.poster_id=p.id
                                AND    m.id=mhg.movie_id
                                AND    mhg.genre_id=g.id
                                AND    m.id=mhc.movie_id
                                AND    mhc.country_id=c.id"/>
    </bean>

    <bean id="getRandomMovies" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                       p.path poster, g.id genre_id, g.name genre, c.name country,
                                       c.id country_id
                                FROM   movie m, poster p, movie_has_genre mhg, genre g,
                                       movie_has_country mhc, country c
                                WHERE  m.poster_id=p.id
                                AND    m.id=mhg.movie_id
                                AND    mhg.genre_id=g.id
                                AND    m.id=mhc.movie_id
                                AND    mhc.country_id=c.id
                                ORDER BY RAND()
                                LIMIT 3;"/>
    </bean>

    <bean id="getMoviesByGenre" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                       p.path poster, g.id genre_id, g.name genre, c.name country,
                                       c.id country_id
                                FROM   movie m, poster p, movie_has_genre mhg, genre g,
                                       movie_has_country mhc, country c
                                WHERE  m.poster_id=p.id
                                AND    m.id=mhg.movie_id
                                AND    mhg.genre_id=g.id
                                AND    m.id=mhc.movie_id
                                AND    mhc.country_id=c.id
                                AND    g.id = ?"/>
    </bean>

    <bean id="getAllGenres" class="java.lang.String">
        <constructor-arg value="SELECT id, name FROM genre;"/>
    </bean>

    <bean id="getMovieById" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.name, m.year, m.description, m.rating, m.price,
                                         p.path poster, g.id genre_id, g.name genre, c.name country,
                                         c.id country_id, r.id review_id, r.text, u.id user_id,
                                         u.first_name, u.last_name
                                FROM movie m
                                LEFT JOIN review r
                                ON r.movie_id=m.id
                                LEFT JOIN user u
                                ON r.user_id=u.id
                                JOIN poster p
                                ON m.poster_id=p.id
                                JOIN movie_has_genre mhg
                                ON m.id=mhg.movie_id
                                JOIN genre g
                                ON mhg.genre_id=g.id
                                JOIN movie_has_country mhc
                                ON m.id=mhc.movie_id
                                JOIN country c
                                ON mhc.country_id=c.id
                                WHERE m.id=?"/>
    </bean>

    <bean id="getUserByEmail" class="java.lang.String">
        <constructor-arg value="SELECT * FROM user WHERE email = ?"/>
    </bean>

    <bean id="addReview" class="java.lang.String">
        <constructor-arg value="INSERT INTO review (user_id,movie_id,text) values (?,?,?);"/>
    </bean>

    <bean id="addPoster" class="java.lang.String">
        <constructor-arg value="INSERT INTO poster (path,name) values(?,?)"/>
    </bean>

    <bean id="addMovie" class="java.lang.String">
        <constructor-arg value="INSERT INTO movie (name,poster_id,year,description,rating,price) values(?,?,?,?,?,?);"/>
    </bean>

    <bean id="addToMovieHasCountry" class="java.lang.String">
        <constructor-arg value="INSERT INTO movie_has_country (movie_id,country_id) values(?,?)"/>
    </bean>

    <bean id="addToMovieHasGenre" class="java.lang.String">
        <constructor-arg value="INSERT INTO movie_has_genre (movie_id,genre_id) values(?,?)"/>
    </bean>

    <bean id="getAllCountries" class="java.lang.String">
        <constructor-arg value="SELECT * FROM country"/>
    </bean>

    <bean id="nbuCurrencyRateURL" class="java.lang.String">
        <constructor-arg value="https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json&amp;valcode="/>
    </bean>

</beans>